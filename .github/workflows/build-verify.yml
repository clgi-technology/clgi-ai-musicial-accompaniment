name: Build Verify Lambda + Deploy to ECR
on:
  push:
    paths:
      - 'verify/**'
      - '.github/workflows/build-verify.yml'
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push verify image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: verify-model-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -f verify/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./verify
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image_uri=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Update Lambda Function
      run: |
        aws lambda update-function-code \
          --function-name verify-model-lambda \
          --image-uri ${{ steps.build.outputs.image_uri }} \
          --region us-east-1

        # Wait for update to complete
        aws lambda wait function-updated --function-name verify-model-lambda
        echo "Lambda UPDATED with $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
