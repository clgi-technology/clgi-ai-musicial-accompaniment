# .github/workflows/toggle-sqs-trigger.yml
name: Toggle Lambda SQS Trigger
on:
  workflow_dispatch:
    inputs:
      function_name:
        description: "Lambda function name (e.g. verify-model-lambda)"
        required: true
      queue_name:
        description: "Optional: part of SQS queue name to match"
        required: false
      action:
        description: "Pause or resume the trigger"
        required: true
        type: choice
        options:
          - pause
          - resume

jobs:
  toggle:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # REQUIRED for OIDC

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::224553687012:role/GitHubActionsIngestRole
          aws-region: us-east-1
          role-session-name: github-toggle

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Toggle SQS Trigger
        env:
          FUNCTION_NAME: ${{ inputs.function_name }}
          QUEUE_NAME: ${{ inputs.queue_name }}
          ACTION: ${{ inputs.action }}
        run: |
          echo "Fetching event source mappings for $FUNCTION_NAME..."
          MAPPINGS=$(aws lambda list-event-source-mappings \
            --function-name "$FUNCTION_NAME" \
            --query 'EventSourceMappings[*].{UUID:UUID,ARN:EventSourceArn}' \
            --output json)

          UUIDS=$(echo "$MAPPINGS" | jq -r --arg q "$QUEUE_NAME" '.[] | select(.ARN | test($q)) | .UUID')

          if [ -z "$UUIDS" ]; then
            echo "No matching SQS triggers found (filter: '$QUEUE_NAME')"
            exit 1
          fi

          for UUID in $UUIDS; do
            if [ "$ACTION" = "pause" ]; then
              echo "Disabling trigger $UUID..."
              aws lambda update-event-source-mapping --uuid "$UUID" --no-enabled
            else
              echo "Enabling trigger $UUID..."
              aws lambda update-event-source-mapping --uuid "$UUID" --enabled true
            fi
          done

          echo "Done. $ACTION applied to $(echo "$UUIDS" | wc -w) trigger(s)."
